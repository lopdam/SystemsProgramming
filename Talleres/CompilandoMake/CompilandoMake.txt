Crear un programa en C que cumpla todos los requisitos de la práctica 3: Almacenamiento de datos estructurados en memoria y que contenga la siguiente funcionalidad extra (puede reusar el código de la práctica anterior):

Los mensajes de error enviarlos a STDERR en lugar de STDOUT, es decir, no usar printf para mostrar mensajes de error, usar por ejemplo fprintf (Enlaces a un sitio externo.)Enlaces a un sitio externo..
Ingresar más de un usuario, es decir, implementar un menú donde se pregunte si desea ingresar otro usuario o terminar.
Guardar la información generada en un archivo con nombre usuario.txt y con el contenido ingresado en el siguientes formato:
<nombre><tab><apellido><tab><username><tab><password><tab><userid>
Ejemplo: Jose  Perez  jperez  miclave12345  112
Un usuario por línea, guardar al terminar
Para guardar, crear una función llamada guardar() en un archivo guardar.c y con una cabecera guardar.h
La función debe tener la siguiente declaración:
void guardar(Usuario_t *); /* Usuario_t * es el puntero al arreglo de usuarios */
Creación del Makefile
El programa debe contener un archivo Makefile que compile todo el proyecto y genere un ejecutable con el nombre usuarios. El archivo Makefile debe tener las siguientes características:

Ser sensible a la modificación de todos los archivos, incluso las cabeceras. Compilar solamente los archivos modificados (es decir, generar .o intermedios)
Tener un target llamado clean el cual borra todos los archivos .o y el ejecutable usuarios.
Entregable
El entregable es un archivo zip (o tar.gz) con los siguientes archivos:

Makefile
main.c (código principal con función main)
validar.c
validar.h
guardar.c
guardar.h
TIPS:

Revisar este enlace sobre como usar fprintf, fopen y fclose para escribir texto en un archivo: https://www.zentut.com/c-tutorial/c-write-text-file/ (Enlaces a un sitio externo.)Enlaces a un sitio externo.
IMPORTANTE: Tareas con errores de compilación no serán calificadas.